---
- name: Install Monitoring
  hosts: masternodes
  become: true
  vars_files:
    - vault.yaml

  vars: 
    ansible_become_pass: "{{ become_password }}"

  tasks:

    # Installera Python3 och pip (Behövs för att kunna installera kubernetes-paket)
    - name: Install Python 3 and pip
      ansible.builtin.apt:
        name:
          - python3
          - python3-pip
        state: present
        update_cache: yes

    # Install Kubernetes Python client
    - name: Install Kubernetes Python client
      ansible.builtin.pip:
        name: kubernetes
        break_system_packages: true
        state: present

    # Konfigurerar upp namespaces för att segmentera klustret
    - name: Create namespaces
      kubernetes.core.k8s:
        kind: Namespace
        name: "{{ item }}"
        kubeconfig: /home/administrator/.kube/config
      loop:
        - ts-development
        - ts-staging
        - ts-production
        - monitoring
    # Laddar ner och installerar Helm (Pakethanterare för kubernetes)
    - name: Download and install Helm
      ansible.builtin.shell: |
        curl -fsSL https://get.helm.sh/helm-v3.10.0-linux-amd64.tar.gz -o helm.tar.gz
        tar -zxvf helm.tar.gz
        sudo mv linux-amd64/helm /usr/local/bin/helm
        rm -rf linux-amd64 helm.tar.gz
      args:
        creates: /usr/local/bin/helm


    - name: Add prometheus Helm repository
      ansible.builtin.command:
        cmd: "helm repo add prometheus-community https://prometheus-community.github.io/helm-charts"
      become_user: administrator

    - name: Add Grafana Helm repository
      ansible.builtin.command:
        cmd: "helm repo add grafana https://grafana.github.io/helm-charts"
      become_user: administrator

    - name: Update helm repository
      ansible.builtin.command:
        cmd: helm repo update
      become_user: administrator

    - name: Install prometheus-community/kube-prometheus-stack
      ansible.builtin.command:
        cmd: "helm upgrade --install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --set grafana.adminPassword=Linux4Ever"
      become_user: administrator

    - name: Port-forward in detached mode using async
      ansible.builtin.command:
        cmd: kubectl port-forward svc/prometheus-grafana 3000:80 -n monitoring
      become_user: administrator
      async: 3600  # Time in seconds (1 hour)
      poll: 0  # Don't wait for the command to finish

