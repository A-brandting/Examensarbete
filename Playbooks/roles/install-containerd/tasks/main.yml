---
# tasks file for install-containerd


# Installerar beroenden för installation av Containerd och Kubernetes
- name: Install required packages (apt-transport-https, ca-certificates, curl, gpg)
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gpg
      - lsb-release
      - gnupg

    state: present
    update_cache: true

# Kontrollerar om swap är enabled
- name: Check if swap is enabled
  ansible.builtin.command:
    cmd: "swapon -s"
  register: swap_status
  changed_when: false  # Se till att det inte räknas som en förändring om swap är avstängt
  ignore_errors: true  # Ignorerar error om swapped är avstängt

# Disablar swap om det är aktiverat
- name: Disable swap if it is active
  ansible.builtin.command:
    cmd: "swapoff -a"
  when: swap_status.stdout != ""  # Kör bara swapoff om swapped är påslaget

# Tar bort swapoff från FSTAB
- name: Comment out swap entry in /etc/fstab to disable swap
  ansible.builtin.lineinfile:
    path: "/etc/fstab"
    line: ''
    regexp: '^/swap.img*'
    state: absent # Ser till att raden inte existerar

# Laddar till Dockers repository nyckel (Samma som för Containerd)
- name: Add Docker GPG key for repository
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

# Lägger till repository för Containerd
- name: Add Docker repository for containerd
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable"
    state: present

# Installerar Containerd
- name: Install Containerd
  ansible.builtin.apt:
    name:
      - containerd.io
    state: present
    update_cache: true

# Lägger till kernel moduler för nätverk
- name: Create /etc/modules-load.d/k8s.conf to load overlay and br_netfilter modules
  ansible.builtin.copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter
    owner: root
    group: root
    mode: '0644'
# Laddar in kernel modul Load overlay
- name: Load overlay module
  community.general.modprobe:
    name: overlay
# Laddar in kernel modul br_netfilter
- name: Load br_netfilter module
  community.general.modprobe:
    name: br_netfilter

# Nödvändiga nätverksinställningar för kubernetesuppsättning
- name: Create /etc/sysctl.d/k8s.conf for Kubernetes settings
  ansible.builtin.copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward = 1
    owner: root
    group: root
    mode: '0644'

# Nödvändiga nätverksinställningar för kubernetesuppsättning
- name: Apply sysctl settings
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present
    reload: true
# Nödvändiga nätverksinställningar för kubernetesuppsättning
- name: Apply sysctl settings for bridge-nf-call-ip6tables
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: 1
    state: present
    reload: true

# Nödvändiga nätverksinställningar för kubernetesuppsättning
- name: Apply sysctl settings for ip_forward
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
    reload: true

# Kopierar containerd configfil till katalog
- name: Create config.toml from template
  ansible.builtin.copy:
    src: config.toml # install-containerd/roles/files/config.toml
    dest: /etc/containerd/config.toml
    mode: '0644'
  become: true
  notify:
    - Restart containerd service # Anropar handler som startar om containerd om configen har ändrats
